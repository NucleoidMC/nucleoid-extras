plugins {
	id 'fabric-loom' version '1.8.+'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = "https://maven.gegy.dev/" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://repo.viaversion.com" }
}

loom {
  accessWidenerPath = file("src/main/resources/extras.accesswidener")
}

fabricApi {
	configureDataGeneration {
		createSourceSet = true
		modId = "nucleoid_extras"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'xyz.nucleoid:plasmid:0.6.2+1.21.4'

	//modCompileOnly "com.viaversion:viaversion-api:4.7.0-SNAPSHOT"
	modCompileOnly "dev.gegy:player-roles-api:1.6.13"
}

test {
	useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
